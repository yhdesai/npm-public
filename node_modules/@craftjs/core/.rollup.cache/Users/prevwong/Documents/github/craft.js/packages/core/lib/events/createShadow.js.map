{"version":3,"file":"createShadow.js","sourceRoot":"","sources":["../../src/events/createShadow.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,CAAY,EACZ,SAAsB,EACtB,eAA8B,EAC9B,EAAE;IACF,MAAM,WAAW,GAAG,CAAC,CAAC,aAA4B,CAAC;IACnD,MAAM,EACJ,GAAG,EAAE,SAAS,EACd,IAAI,EAAE,UAAU,GACjB,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC;IAEtC,IAAI,CAAC,WAAW,EAAE;QAChB,OAAO;KACR;IAED,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAChD,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;IACnC,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;IAC/B,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;IAC9B,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;IAC/B,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IAChC,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;IAEvC,eAAe,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;QAC9B,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,CAAgB,CAAC;QAClD,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,qBAAqB,EAAE,CAAC;QACjE,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,KAAK,IAAI,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;QAE9B,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;IAE9D,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","sourcesContent":["export const createShadow = (\n  e: DragEvent,\n  targetDOM: HTMLElement,\n  shadowsToCreate: HTMLElement[]\n) => {\n  const selectorDOM = e.currentTarget as HTMLElement;\n  const {\n    top: targetTop,\n    left: targetLeft,\n  } = targetDOM.getBoundingClientRect();\n\n  if (!selectorDOM) {\n    return;\n  }\n\n  const container = document.createElement('div');\n  container.style.position = 'fixed';\n  container.style.left = '-100%';\n  container.style.top = `-100%`;\n  container.style.width = '100%';\n  container.style.height = '100%';\n  container.style.pointerEvents = 'none';\n\n  shadowsToCreate.forEach((dom) => {\n    const shadow = dom.cloneNode(true) as HTMLElement;\n    const { width, height, top, left } = dom.getBoundingClientRect();\n    shadow.style.position = `absolute`;\n    shadow.style.width = `${width}px`;\n    shadow.style.height = `${height}px`;\n    shadow.style.left = `${left}px`;\n    shadow.style.top = `${top}px`;\n\n    container.appendChild(shadow);\n  });\n\n  document.body.appendChild(container);\n  e.dataTransfer.setDragImage(container, targetLeft, targetTop);\n\n  return container;\n};\n"]}