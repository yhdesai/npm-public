{"version":3,"file":"mergeTrees.js","sourceRoot":"","sources":["../../src/utils/mergeTrees.tsx"],"names":[],"mappings":"AAEA,MAAM,UAAU,GAAG,CAAC,QAAc,EAAE,aAAyB,EAAE,EAAE;IAC/D,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;QAC5B,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC;KACpC;IACD,MAAM,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;IAChE,MAAM,gBAAgB,GAAG,EAAE,GAAG,QAAQ,EAAE,KAAK,EAAE,CAAC;IAChD,MAAM,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC;IACtD,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QAC1C,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,OAAO;YACL,GAAG,KAAK;YACR,GAAG,IAAI,CAAC,KAAK;YACb,yCAAyC;YACzC,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE;gBAChB,GAAG,WAAW;gBACd,MAAM,EAAE,QAAQ,CAAC,EAAE;aACpB;SACF,CAAC;IACJ,CAAC,EAAE,SAAS,CAAC,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,CACxB,QAAc,EACd,aAAyB,EACf,EAAE,CAAC,CAAC;IACd,UAAU,EAAE,QAAQ,CAAC,EAAE;IACvB,KAAK,EAAE,UAAU,CAAC,QAAQ,EAAE,aAAa,CAAC;CAC3C,CAAC,CAAC","sourcesContent":["import { Node, NodeTree } from '../interfaces';\n\nconst mergeNodes = (rootNode: Node, childrenNodes: NodeTree[]) => {\n  if (childrenNodes.length < 1) {\n    return { [rootNode.id]: rootNode };\n  }\n  const nodes = childrenNodes.map(({ rootNodeId }) => rootNodeId);\n  const nodeWithChildren = { ...rootNode, nodes };\n  const rootNodes = { [rootNode.id]: nodeWithChildren };\n  return childrenNodes.reduce((accum, tree) => {\n    const currentNode = tree.nodes[tree.rootNodeId];\n    return {\n      ...accum,\n      ...tree.nodes,\n      // set the parent id for the current node\n      [currentNode.id]: {\n        ...currentNode,\n        parent: rootNode.id,\n      },\n    };\n  }, rootNodes);\n};\n\nexport const mergeTrees = (\n  rootNode: Node,\n  childrenNodes: NodeTree[]\n): NodeTree => ({\n  rootNodeId: rootNode.id,\n  nodes: mergeNodes(rootNode, childrenNodes),\n});\n"]}