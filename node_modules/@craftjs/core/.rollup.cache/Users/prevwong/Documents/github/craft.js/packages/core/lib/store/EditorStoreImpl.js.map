{"version":3,"file":"EditorStoreImpl.js","sourceRoot":"","sources":["../../src/store/EditorStoreImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import { Store, History, ERROR_RESOLVER_NOT_AN_OBJECT } from '@craftjs/utils';\nimport invariant from 'tiny-invariant';\n\nimport { EditorStore, EditorStoreConfig } from './EditorStore';\nimport { RelatedComponents } from './RelatedComponents';\nimport { ActionMethods } from './actions';\nimport { EditorQuery } from './query';\n\nimport { CoreEventHandlers } from '../events/CoreEventHandlers';\nimport { DefaultEventHandlers } from '../events/DefaultEventHandlers';\nimport { EditorState, NodeId, Resolver } from '../interfaces';\n\nconst normalizeStateOnUndoRedo = (state: EditorState) => {\n  /**\n   * On every undo/redo, we remove events pointing to deleted Nodes\n   */\n  Object.keys(state.events).forEach((eventName) => {\n    const nodeIds: NodeId[] = Array.from(state.events[eventName] || []);\n\n    nodeIds.forEach((id) => {\n      if (!state.nodes[id]) {\n        state.events[eventName].delete(id);\n      }\n    });\n  });\n};\n\nexport const editorInitialState: EditorState = {\n  nodes: {},\n  enabled: true,\n  events: {\n    dragged: new Set<NodeId>(),\n    selected: new Set<NodeId>(),\n    hovered: new Set<NodeId>(),\n  },\n  indicator: null,\n  timestamp: Date.now(),\n};\n\nexport class EditorStoreImpl extends Store<EditorState> implements EditorStore {\n  history: History;\n  config: EditorStoreConfig;\n  handlers: CoreEventHandlers;\n  related: RelatedComponents;\n  resolver: Resolver;\n\n  constructor(\n    config?: Partial<EditorStoreConfig & { state: Partial<EditorState> }>\n  ) {\n    const { state, ...storeConfig } = config;\n    super({\n      ...editorInitialState,\n      ...state,\n    });\n\n    this.config = {\n      onNodesChange: () => null,\n      onRender: ({ render }) => render,\n      indicator: {\n        error: 'red',\n        success: 'rgb(98, 196, 98)',\n      },\n      handlers: (store) =>\n        new DefaultEventHandlers({\n          store,\n          isMultiSelectEnabled: (e: MouseEvent) => !!e.metaKey,\n        }),\n      normalizeNodes: () => {},\n      resolver: {},\n      ...(storeConfig || {}),\n    };\n\n    // we do not want to warn the user if no resolver was supplied\n    if (this.config.resolver !== undefined) {\n      invariant(\n        typeof this.config.resolver === 'object' &&\n          !Array.isArray(this.config.resolver),\n        ERROR_RESOLVER_NOT_AN_OBJECT\n      );\n    }\n\n    this.history = new History();\n    this.related = new RelatedComponents();\n    this.resolver = this.config.resolver;\n    this.handlers = this.config.handlers(this);\n\n    this.subscribe(\n      (state) => ({ enabled: state.enabled }),\n      ({ enabled }) => {\n        if (!enabled) {\n          this.handlers.disable();\n          return;\n        }\n\n        this.handlers.enable();\n      }\n    );\n  }\n\n  // TODO: The actions api will be updated to use an operations-like model, we're keeping this here for now\n  get actions() {\n    const methods = ActionMethods(null, this);\n    const currentState = this.getState();\n\n    const getBaseActions = (\n      historyCallback?: (patches, inversePatches, type: string) => void\n    ) =>\n      Object.keys(methods).reduce((accum, actionKey) => {\n        return {\n          ...accum,\n          [actionKey]: (...args) => {\n            return this.setState(\n              (state) => ActionMethods(state, this)[actionKey](...args),\n              {\n                onPatch: (patches, inversePatches) => {\n                  // TODO: this will be deprecated\n                  // Keeping it here until we improve the actions API\n                  if (this.config.normalizeNodes) {\n                    this.setState((state) =>\n                      this.config.normalizeNodes(state, currentState)\n                    );\n                  }\n                  if (\n                    [\n                      'setDOM',\n                      'setNodeEvent',\n                      'selectNode',\n                      'clearEvents',\n                      'setOptions',\n                      'setIndicator',\n                    ].includes(actionKey) ||\n                    !historyCallback\n                  ) {\n                    return;\n                  }\n\n                  if (this.config.onNodesChange) {\n                    this.config.onNodesChange(this.query);\n                  }\n\n                  // When deserialize, make sure to cleanup any existing connectors\n                  // Otherwise, connectors with existing Node ids won't get created correctly\n                  if (actionKey === 'deserialize') {\n                    this.handlers.cleanup();\n                  }\n\n                  historyCallback(patches, inversePatches, actionKey);\n                },\n              }\n            );\n          },\n        };\n      }, {} as ReturnType<typeof ActionMethods>);\n\n    const history = {\n      undo: () =>\n        this.setState((state) => {\n          this.history.undo(state);\n          normalizeStateOnUndoRedo(state);\n        }),\n      redo: () =>\n        this.setState((state) => {\n          this.history.redo(state);\n          normalizeStateOnUndoRedo(state);\n        }),\n      ignore: () => getBaseActions(),\n      throttle: (rate: number = 500) =>\n        getBaseActions((patch, inversePatch) =>\n          this.history.throttleAdd(patch, inversePatch, rate)\n        ),\n      merge: () =>\n        getBaseActions((patch, inversePatch) =>\n          this.history.merge(patch, inversePatch)\n        ),\n    };\n\n    return {\n      ...getBaseActions((patch, inversePatch) =>\n        this.history.add(patch, inversePatch)\n      ),\n      history,\n    };\n  }\n\n  // TODO: move to useEditor/useInternalEditor hook\n  get query() {\n    return new EditorQuery(this);\n  }\n}\n"]}