{"version":3,"file":"testHelpers.js","sourceRoot":"","sources":["../../src/utils/testHelpers.ts"],"names":[],"mappings":"AACA,OAAO,EAEL,eAAe,EACf,kBAAkB,GACnB,MAAM,UAAU,CAAC;AAClB,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAc3D,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,IAAuB,EAAE,EAAE;IACzD,MAAM,YAAY,GAAU,EAAE,CAAC;IAC/B,MAAM,WAAW,GAAG,CAAC,WAA8B,EAAE,MAAM,GAAG,IAAI,EAAE,EAAE;QACpE,MAAM,IAAI,GAAG;YACX,EAAE,EAAE,eAAe,EAAE;YACrB,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,KAAK;YACX,WAAW,EAAE,KAAK;YAClB,QAAQ,EAAE,KAAK;YACf,MAAM,EAAE,KAAK;YACb,GAAG,WAAW;SACf,CAAC;QAEF,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG;YACtB,GAAG,IAAI;YACP,MAAM;YACN,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;SAChB,CAAC;QAEF,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CACzD,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAChC,CAAC;QACF,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CACzE,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;YAC5B,GAAG,KAAK;YACR,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC;SACvC,CAAC,EACF,EAAE,CACH,CAAC;QAEF,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;IAEF,WAAW,CAAC,IAAI,CAAC,CAAC;IAElB,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC;AAOF,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,QAAkC,EAAE,EAAE,EAAE;IACtE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;IAE1C,OAAO;QACL,GAAG,kBAAkB;QACrB,GAAG,KAAK;QACR,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;QAChD,MAAM,EAAE;YACN,GAAG,kBAAkB,CAAC,MAAM;YAC5B,GAAG,CAAC,CAAC,MAAM;gBACT,CAAC,CAAC,EAAE;gBACJ,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAC3B,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;oBAC9B,GAAG,KAAK;oBACR,CAAC,SAAS,CAAC,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC;iBAC5B,CAAC,EACF,EAAE,CACH,CAAC;SACP;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,CACnC,MAAwE,EACxE,EAAE;IACF,MAAM,EAAE,KAAK,EAAE,GAAG,WAAW,EAAE,GAAG,MAAM,CAAC;IAEzC,OAAO,IAAI,eAAe,CAAC;QACzB,GAAG,WAAW;QACd,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { Node, NodeEventTypes, NodeId, Nodes } from '../interfaces';\nimport {\n  EditorStoreConfig,\n  EditorStoreImpl,\n  editorInitialState,\n} from '../store';\nimport { getRandomNodeId } from '../utils/getRandomNodeId';\n\ntype NestedNode = Omit<Node, 'nodes' | 'linkedNodes' | 'parent'> & {\n  nodes: NestedNode[];\n  linkedNodes: Record<NodeId, NestedNode>;\n};\n\ntype PartialNestedNode = Partial<\n  Omit<NestedNode, 'nodes' | 'linkedNodes'> & {\n    nodes: PartialNestedNode[];\n    linkedNodes: Record<NodeId, PartialNestedNode>;\n  }\n>;\n\nexport const createTestNodes = (node: PartialNestedNode) => {\n  const flattenNodes: Nodes = {};\n  const flattenNode = (partialNode: PartialNestedNode, parent = null) => {\n    const node = {\n      id: getRandomNodeId(),\n      nodes: [],\n      linkedNodes: {},\n      props: {},\n      custom: {},\n      type: 'div',\n      displayName: 'div',\n      isCanvas: false,\n      hidden: false,\n      ...partialNode,\n    };\n\n    flattenNodes[node.id] = {\n      ...node,\n      parent,\n      nodes: [],\n      linkedNodes: {},\n    };\n\n    flattenNodes[node.id].nodes = node.nodes.map((childNode) =>\n      flattenNode(childNode, node.id)\n    );\n    flattenNodes[node.id].linkedNodes = Object.entries(node.linkedNodes).reduce(\n      (accum, [id, linkedNode]) => ({\n        ...accum,\n        [id]: flattenNode(linkedNode, node.id),\n      }),\n      {}\n    );\n\n    return node.id;\n  };\n\n  flattenNode(node);\n\n  return flattenNodes;\n};\n\ntype TestEditorState = {\n  nodes: PartialNestedNode;\n  events: Record<NodeEventTypes, NodeId[]>;\n};\n\nexport const createTestState = (state: Partial<TestEditorState> = {}) => {\n  const { nodes: rootNode, events } = state;\n\n  return {\n    ...editorInitialState,\n    ...state,\n    nodes: rootNode ? createTestNodes(rootNode) : {},\n    events: {\n      ...editorInitialState.events,\n      ...(!events\n        ? {}\n        : Object.entries(events).reduce(\n            (accum, [eventType, array]) => ({\n              ...accum,\n              [eventType]: new Set(array),\n            }),\n            {}\n          )),\n    },\n  };\n};\n\nexport const createTestEditorStore = (\n  config: Partial<EditorStoreConfig & { state: Partial<TestEditorState> }>\n) => {\n  const { state, ...otherConfig } = config;\n\n  return new EditorStoreImpl({\n    ...otherConfig,\n    state: createTestState(state),\n  });\n};\n"]}