/// <reference types="react" />
import { NodeQuery } from '../store';
export declare type NodeCollector<C> = (node: NodeQuery) => C;
export declare function useInternalNode<C = null>(collect?: NodeCollector<C>): (C extends null ? {} : C) & {
    id: string;
    related: boolean;
    inNodeContext: boolean;
    actions: {
        setProp: (cb: any, throttleRate?: number) => void;
        setCustom: (cb: any, throttleRate?: number) => void;
        setHidden: (bool: boolean) => any;
    };
    connectors: import("@craftjs/utils").ChainableConnectors<{
        connect: (element: HTMLElement) => void;
        drag: (element: HTMLElement) => void;
    }, import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, any>) | (new (props: any) => import("react").Component<any, any, any>)>>;
};
