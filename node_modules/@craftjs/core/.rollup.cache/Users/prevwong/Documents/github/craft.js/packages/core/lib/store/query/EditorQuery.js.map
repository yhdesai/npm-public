{"version":3,"file":"EditorQuery.js","sourceRoot":"","sources":["../../../src/store/query/EditorQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  deprecationWarning,\n  ERROR_NOT_IN_RESOLVER,\n  getDOMInfo,\n  ROOT_NODE,\n} from '@craftjs/utils';\nimport React from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { NodeQuery } from './NodeQuery';\n\nimport findPosition from '../../events/findPosition';\nimport {\n  FreshNode,\n  Indicator,\n  LegacyEditorQuery,\n  Node,\n  NodeEventTypes,\n  NodeId,\n  NodeInfo,\n  NodeSelector,\n  NodeTree,\n  SerializedNode,\n  SerializedNodes,\n} from '../../interfaces';\nimport { deserializeNode } from '@/utils/deserializeNode';\nimport { getNodesFromSelector } from '@/utils/getNodesFromSelector';\nimport { parseNodeFromJSX } from '../../nodes/Element';\nimport { adaptLegacyNode } from '../../utils/types';\nimport { EditorStore } from '../EditorStore';\nimport { EventHelpers } from '../EventHelpers';\n\nexport class EditorQuery implements LegacyEditorQuery {\n  constructor(private readonly store: EditorStore) {\n    this.store = store;\n  }\n\n  protected get state() {\n    return this.store.getState();\n  }\n\n  get root() {\n    return this.node(ROOT_NODE);\n  }\n\n  isEnabled() {\n    return this.state.enabled;\n  }\n\n  node(id: NodeId) {\n    const node = this.state.nodes[id];\n    if (!node) {\n      return null;\n    }\n\n    return new NodeQuery(this.store, id);\n  }\n\n  event(eventType: NodeEventTypes) {\n    return EventHelpers(this.state, eventType);\n  }\n\n  getDropPlaceholder(\n    source: NodeSelector,\n    target: NodeId,\n    pos: { x: number; y: number },\n    nodeIdToDOM?: (id: NodeId) => HTMLElement\n  ) {\n    const state = this.state;\n    const targetNode = state.nodes[target],\n      isTargetCanvas = this.node(target).isCanvas();\n\n    const targetParent = isTargetCanvas\n      ? targetNode\n      : state.nodes[targetNode.parent];\n\n    if (!targetParent) return;\n\n    const targetParentNodes = targetParent.nodes || [];\n\n    const dimensionsInContainer = targetParentNodes\n      ? targetParentNodes.reduce((result, id: NodeId) => {\n          const dom = nodeIdToDOM ? nodeIdToDOM(id) : this.node(id).getDOM();\n\n          if (dom) {\n            const info: NodeInfo = {\n              id,\n              ...getDOMInfo(dom),\n            };\n\n            result.push(info);\n          }\n          return result;\n        }, [] as NodeInfo[])\n      : [];\n\n    const dropAction = findPosition(\n      targetParent.id,\n      dimensionsInContainer,\n      pos.x,\n      pos.y\n    );\n    const currentNode =\n      targetParentNodes.length &&\n      state.nodes[targetParentNodes[dropAction.index]];\n\n    const output: Indicator = {\n      placement: {\n        ...dropAction,\n        currentNode: currentNode.id,\n      },\n      error: false,\n    };\n\n    const sourceNodes = getNodesFromSelector(this.store, source);\n\n    sourceNodes.forEach(({ node, exists }) => {\n      if (!exists) {\n        return;\n      }\n\n      // If source Node is already in the editor, check if it's draggable\n      this.node(node.id).isDraggable((err) => (output.error = err));\n    });\n\n    // Check if source Node is droppable in target\n    this.node(targetParent.id).isDroppable(\n      source,\n      (err) => (output.error = err)\n    );\n\n    return output;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * @deprecated\n   * @param reactElement\n   * @returns\n   */\n  parseReactElement(reactElement: React.ReactElement) {\n    return {\n      toNodeTree: (\n        normalize?: (node: Node, jsx: React.ReactElement) => void\n      ): NodeTree => {\n        return parseNodeFromJSX(reactElement, this.store.resolver, normalize);\n      },\n    };\n  }\n\n  get history() {\n    return {\n      canUndo: () => this.store.history.canUndo(),\n      canRedo: () => this.store.history.canRedo(),\n    };\n  }\n\n  /**\n   * @deprecated\n   */\n  get events() {\n    return this.state.events;\n  }\n\n  /**\n   * @deprecated\n   */\n  get nodes(): Record<string, NodeQuery> {\n    return Object.keys(this.state.nodes).reduce(\n      (accum, nodeId) => ({\n        ...accum,\n        [nodeId]: new NodeQuery(this.store, nodeId),\n      }),\n      {}\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  get options() {\n    return {\n      ...this.store.config,\n      enabled: this.isEnabled(),\n    };\n  }\n\n  /**\n   * @deprecated\n   */\n  get indicator() {\n    return this.state.indicator;\n  }\n\n  /**\n   * @deprecated\n   */\n  get timestamp() {\n    return this.state.timestamp;\n  }\n\n  /**\n   * @deprecated\n   */\n  getEvent(eventType: NodeEventTypes) {\n    return this.event(eventType);\n  }\n\n  /**\n   * @deprecated\n   */\n  getOptions() {\n    return this.options;\n  }\n\n  /**\n   * @deprecated\n   */\n  getSerializedNodes(): SerializedNodes {\n    return Object.keys(this.state.nodes).reduce(\n      (accum, id) => ({\n        ...accum,\n        [id]: this.node(id).toSerializedNode(),\n      }),\n      {}\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  serialize(): string {\n    return JSON.stringify(this.getSerializedNodes());\n  }\n\n  /**\n   * @deprecated\n   * @param serializedNode\n   */\n  parseSerializedNode(serializedNode: SerializedNode) {\n    return {\n      toNode: (normalize?: (node: Node) => void) => {\n        const data = deserializeNode(serializedNode, this.store.resolver);\n        invariant(data.type, ERROR_NOT_IN_RESOLVER);\n        const id = typeof normalize === 'string' && normalize;\n        if (id) {\n          deprecationWarning(`query.parseSerializedNode(...).toNode(id)`, {\n            suggest: `query.parseSerializedNode(...).toNode(node => node.id = id)`,\n          });\n        }\n\n        return this.parseFreshNode({\n          ...(id ? { id } : {}),\n          data,\n        }).toNode(!id && normalize);\n      },\n    };\n  }\n\n  /**\n   * @deprecated\n   * @param freshNode\n   */\n  parseFreshNode(freshNode: FreshNode) {\n    return {\n      toNode: (normalize?: (node: Node) => void): Node => {\n        let node = adaptLegacyNode(freshNode, this.store.resolver);\n\n        const { type, name, ...data } = freshNode.data;\n\n        node = {\n          ...node,\n          ...data,\n        };\n\n        if (normalize) {\n          normalize(node);\n        }\n\n        return node;\n      },\n    };\n  }\n}\n"]}