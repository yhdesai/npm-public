{"version":3,"file":"NodeQuery.js","sourceRoot":"","sources":["../../../src/store/query/NodeQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  deprecationWarning,\n  ERROR_CANNOT_DRAG,\n  ERROR_MOVE_CANNOT_DROP,\n  ERROR_MOVE_INCOMING_PARENT,\n  ERROR_MOVE_NONCANVAS_CHILD,\n  ERROR_MOVE_OUTGOING_PARENT,\n  ERROR_MOVE_TOP_LEVEL_NODE,\n  ERROR_MOVE_TO_DESCENDANT,\n  ERROR_MOVE_TO_NONCANVAS_PARENT,\n  ERROR_NOT_IN_RESOLVER,\n  ROOT_NODE,\n} from '@craftjs/utils';\nimport invariant from 'tiny-invariant';\n\nimport {\n  LegacyNode,\n  LegacyNodeData,\n  LegacyNodeQuery,\n  NodeEventTypes,\n  NodeId,\n  Node,\n  NodeRules,\n  NodeSelector,\n  BackwardsCompatibleNode,\n} from '../../interfaces';\nimport { getNodesFromSelector } from '../../utils/getNodesFromSelector';\nimport { getResolverConfig } from '../../utils/resolveNode';\nimport { serializeNode } from '../../utils/serializeNode';\nimport { EditorStore } from '../EditorStore';\n\n/**\n * NodeQuery helps define a Node in the EditorState\n */\nexport class NodeQuery implements LegacyNodeQuery {\n  node: Node;\n\n  constructor(private readonly store: EditorStore, readonly id: NodeId) {\n    this.node = this.store.getState().nodes[this.id];\n  }\n\n  /**\n   * Returns an object with all the properties from both Node and LegacyNode\n   * This is primarily used in places such as NodeRules where the Node is exposed to the APIs\n   * Hence, we need to consider all existing codebases that're still using the LegacyNode\n   * @param node\n   * @returns BackwardsCompatibleNode\n   */\n  private _createBackwardsCompatibleNode(node: Node): BackwardsCompatibleNode {\n    const existingNode = this.find(node.id);\n    if (existingNode) {\n      return {\n        id: existingNode.id,\n        data: existingNode.data,\n        related: existingNode.related,\n        dom: existingNode.dom,\n        rules: existingNode.rules,\n        events: existingNode.events,\n        ...node,\n      };\n    }\n\n    const config = getResolverConfig(node.type, this.store.resolver);\n\n    return {\n      id: node.id,\n      data: {\n        ...node,\n        type: config.component,\n        name: node.type,\n      },\n      related: config.related,\n      dom: null,\n      rules: config.rules,\n      events: {\n        selected: false,\n        hovered: false,\n        dragged: false,\n      },\n      ...node,\n    };\n  }\n\n  private getConfig() {\n    const config = getResolverConfig(this.type, this.store.resolver);\n    invariant(config, ERROR_NOT_IN_RESOLVER);\n    return config;\n  }\n\n  get type() {\n    return this.node.type;\n  }\n\n  get props() {\n    return this.node.props;\n  }\n\n  get custom() {\n    return this.node.custom;\n  }\n\n  getParent() {\n    return this.node.parent ? this.find(this.node.parent) : null;\n  }\n\n  getAncestors() {\n    const appendParentNode = (\n      id: NodeId,\n      ancestors: NodeQuery[] = [],\n      depth: number = 0\n    ): NodeQuery[] => {\n      const node = this.find(id);\n\n      if (!node) {\n        return ancestors;\n      }\n\n      ancestors.push(node);\n\n      if (!node.getParent()) {\n        return ancestors;\n      }\n\n      return appendParentNode(node.getParent().id, ancestors, depth + 1);\n    };\n\n    return appendParentNode(this.node.parent);\n  }\n\n  getDescendants() {\n    const appendChildNode = (\n      id: NodeId,\n      descendants: NodeQuery[] = [],\n      depth: number = 0\n    ): NodeQuery[] => {\n      const node = this.find(id);\n\n      if (!node) {\n        return descendants;\n      }\n\n      // Include linkedNodes if any\n      const linkedNodes = this.find(id)\n        .getLinkedNodes()\n        .map((linkedNodes) => linkedNodes.node);\n      const childNodes = this.find(id).getChildNodes();\n\n      [...linkedNodes, ...childNodes].forEach((node) => {\n        descendants.push(node);\n        descendants = appendChildNode(node.id, descendants, depth + 1);\n      });\n\n      return descendants;\n    };\n    return appendChildNode(this.id);\n  }\n\n  getComponent() {\n    return this.getConfig().component;\n  }\n\n  getDOM() {\n    return this.store.handlers.dom.get(this.node.id);\n  }\n\n  getRules(): NodeRules {\n    return this.getConfig().rules;\n  }\n\n  // TODO: Related Components are difficult to maintain; might need to find an alternative\n  getRelated() {\n    const related = this.getConfig().related;\n\n    const relatedNodeContext = {\n      id: this.id,\n      related: true,\n    };\n\n    return {};\n    // return Object.keys(related).reduce((accum, comp) => {\n    //   const relatedType = this.store.related.get(this.id, comp);\n\n    //   return {\n    //     ...accum,\n    //     [comp]:\n    //       relatedType ||\n    //       this.store.related.add(this.id, comp, () =>\n    //         createElement(\n    //           NodeProvider,\n    //           relatedNodeContext,\n    //           createElement(related[comp])\n    //         )\n    //       ),\n    //   };\n    // }, {});\n  }\n\n  getLinkedNodes() {\n    return Object.entries(this.node.linkedNodes).reduce<\n      { id: string; node: NodeQuery }[]\n    >(\n      (accum, [linkedId, nodeId]) => [\n        ...accum,\n        { id: linkedId, node: this.find(nodeId) },\n      ],\n      []\n    );\n  }\n\n  getChildNodes() {\n    return this.node.nodes.map((childNodeId) => this.find(childNodeId));\n  }\n\n  indexOf(childNodeId: NodeId) {\n    return this.node.nodes.indexOf(childNodeId);\n  }\n\n  getChildAtIndex(index) {\n    const childIdAtIndex = this.node.nodes[index];\n    return this.find(childIdAtIndex);\n  }\n\n  isCanvas() {\n    return !!this.node.isCanvas;\n  }\n\n  isRoot() {\n    return this.node.id === ROOT_NODE;\n  }\n\n  isLinkedNode() {\n    return (\n      this.node.parent &&\n      this.getParent()\n        .getLinkedNodes()\n        .map((linkedNodes) => linkedNodes.node.id)\n        .includes(this.node.id)\n    );\n  }\n\n  isTopLevelNode() {\n    return this.isRoot() || this.isLinkedNode();\n  }\n\n  isDeletable() {\n    return !this.isTopLevelNode();\n  }\n\n  isParentOfTopLevelNodes() {\n    return this.getLinkedNodes().length > 0;\n  }\n\n  isParentOfTopLevelCanvas() {\n    deprecationWarning('query.node(id).isParentOfTopLevelCanvas', {\n      suggest: 'query.node(id).isParentOfTopLevelNodes',\n    });\n    return this.isParentOfTopLevelNodes();\n  }\n\n  isSelected() {\n    const { events } = this.store.getState();\n    return events.selected.has(this.id);\n  }\n\n  isHovered() {\n    const { events } = this.store.getState();\n    return events.hovered.has(this.id);\n  }\n\n  isDragged() {\n    const { events } = this.store.getState();\n    return events.dragged.has(this.id);\n  }\n\n  isDraggable(onError?: (err: string) => void) {\n    try {\n      invariant(!this.isTopLevelNode(), ERROR_MOVE_TOP_LEVEL_NODE);\n      invariant(\n        this.find(this.node.parent).isCanvas(),\n        ERROR_MOVE_NONCANVAS_CHILD\n      );\n      invariant(\n        this.getRules().canDrag(\n          this._createBackwardsCompatibleNode(this.node),\n          (id: NodeId) => this.find(id)\n        ),\n        ERROR_CANNOT_DRAG\n      );\n      return true;\n    } catch (err) {\n      if (onError) {\n        onError(err);\n      }\n      return false;\n    }\n  }\n\n  isDroppable(selector: NodeSelector, onError?: (err: string) => void) {\n    const targets = getNodesFromSelector(this.store, selector);\n    try {\n      invariant(this.isCanvas(), ERROR_MOVE_TO_NONCANVAS_PARENT);\n      invariant(\n        this.getRules().canMoveIn(\n          targets.map((selector) =>\n            this._createBackwardsCompatibleNode(selector.node)\n          ),\n          this._createBackwardsCompatibleNode(this.node),\n          (id: NodeId) => this.find(id)\n        ),\n        ERROR_MOVE_INCOMING_PARENT\n      );\n\n      const parentNodes: Record<NodeId, Node[]> = {};\n\n      targets.forEach(({ node: targetNode, exists }) => {\n        const rules = this.getRules();\n\n        invariant(\n          rules.canDrop(\n            this._createBackwardsCompatibleNode(this.node),\n            this._createBackwardsCompatibleNode(targetNode),\n            (id: NodeId) => this.find(id)\n          ),\n          ERROR_MOVE_CANNOT_DROP\n        );\n\n        // Ignore other checking if the Node is new\n        if (!exists) {\n          return;\n        }\n        const targetDeepNodes = this.descendants();\n\n        invariant(\n          !targetDeepNodes.includes(this.id) && this.id !== targetNode.id,\n          ERROR_MOVE_TO_DESCENDANT\n        );\n\n        const currentParentNode = this.find(targetNode.parent);\n\n        invariant(currentParentNode.isCanvas(), ERROR_MOVE_NONCANVAS_CHILD);\n\n        if (currentParentNode.id !== this.id) {\n          if (!parentNodes[currentParentNode.id]) {\n            parentNodes[currentParentNode.id] = [];\n          }\n\n          parentNodes[currentParentNode.id].push(targetNode);\n        }\n      });\n\n      Object.keys(parentNodes).forEach((parentNodeId) => {\n        const childNodes = parentNodes[parentNodeId];\n        const parentNode = this.find(parentNodeId);\n\n        invariant(\n          parentNode.getRules().canMoveOut(\n            childNodes.map((node) => this._createBackwardsCompatibleNode(node)),\n            this._createBackwardsCompatibleNode(parentNode.node),\n            (id: NodeId) => this.find(id)\n          ),\n          ERROR_MOVE_OUTGOING_PARENT\n        );\n      });\n\n      return true;\n    } catch (err) {\n      if (onError) {\n        onError(err);\n      }\n      return false;\n    }\n  }\n\n  toNodeTree() {\n    const nodes = [this, ...this.getDescendants()].reduce((accum, node) => {\n      accum[node.id] = node.get();\n      return accum;\n    }, {});\n\n    return {\n      rootNodeId: this.id,\n      nodes,\n    };\n  }\n\n  private find(id: NodeId) {\n    const node = this.store.getState().nodes[id];\n    if (!node) {\n      return null;\n    }\n\n    return new NodeQuery(this.store, id);\n  }\n\n  /**\n   * @deprecated\n   */\n  get data(): LegacyNodeData {\n    return {\n      type: this.getComponent(),\n      name: this.type,\n      displayName: this.type,\n      custom: this.node.custom,\n      props: this.node.props,\n      linkedNodes: this.node.linkedNodes,\n      nodes: this.node.nodes,\n      parent: this.node.parent,\n      isCanvas: this.node.isCanvas,\n      hidden: this.node.hidden,\n    };\n  }\n\n  /**\n   * @deprecated\n   */\n  get events(): Record<NodeEventTypes, boolean> {\n    return {\n      selected: this.isSelected(),\n      hovered: this.isHovered(),\n      dragged: this.isDragged(),\n    };\n  }\n\n  /**\n   * @deprecated\n   */\n  get dom() {\n    return this.getDOM();\n  }\n\n  /**\n   * @deprecated\n   */\n  get related() {\n    return this.getRelated();\n  }\n\n  /**\n   * @deprecated\n   */\n  get rules() {\n    return this.getRules();\n  }\n\n  /**\n   * @deprecated\n   */\n  get _hydrationTimestamp() {\n    deprecationWarning('Node._hydrationTimestamp', {\n      suggest: 'EditorState.timestamp',\n    });\n\n    return this.store.getState().timestamp;\n  }\n\n  /**\n   * @deprecated\n   * @returns\n   */\n  linkedNodes() {\n    return Object.values(this.node.linkedNodes);\n  }\n\n  /**\n   * @deprecated\n   * @returns\n   */\n  childNodes() {\n    return this.node.nodes;\n  }\n\n  /**\n   * @deprecated\n   * @returns\n   */\n  isTopLevelCanvas() {\n    return !this.isRoot() && !this.getParent();\n  }\n\n  /**\n   * @deprecated\n   * @param deep\n   * @returns\n   */\n  ancestors(deep = false): NodeId[] {\n    const appendParentNode = (\n      id: NodeId,\n      ancestors: NodeId[] = [],\n      depth: number = 0\n    ) => {\n      const node = this.store.getState().nodes[id];\n      if (!node) {\n        return ancestors;\n      }\n\n      ancestors.push(id);\n\n      if (!node.parent) {\n        return ancestors;\n      }\n\n      if (deep || (!deep && depth === 0)) {\n        ancestors = appendParentNode(node.parent, ancestors, depth + 1);\n      }\n      return ancestors;\n    };\n    return appendParentNode(this.node.parent);\n  }\n\n  /**\n   * @deprecated\n   * @param deep\n   * @param includeOnly\n   * @returns\n   */\n  descendants(\n    deep = false,\n    includeOnly?: 'linkedNodes' | 'childNodes'\n  ): NodeId[] {\n    const appendChildNode = (\n      id: NodeId,\n      descendants: NodeId[] = [],\n      depth: number = 0\n    ) => {\n      if (deep || (!deep && depth === 0)) {\n        const node = this.store.getState().nodes[id];\n\n        if (!node) {\n          return descendants;\n        }\n\n        if (includeOnly !== 'childNodes') {\n          // Include linkedNodes if any\n          const linkedNodes = this.find(id).linkedNodes();\n\n          linkedNodes.forEach((nodeId) => {\n            descendants.push(nodeId);\n            descendants = appendChildNode(nodeId, descendants, depth + 1);\n          });\n        }\n\n        if (includeOnly !== 'linkedNodes') {\n          const childNodes = this.find(id).childNodes();\n\n          childNodes.forEach((nodeId) => {\n            descendants.push(nodeId);\n            descendants = appendChildNode(nodeId, descendants, depth + 1);\n          });\n        }\n\n        return descendants;\n      }\n      return descendants;\n    };\n\n    return appendChildNode(this.id);\n  }\n\n  /**\n   * @deprecated\n   */\n  get(): LegacyNode {\n    return {\n      id: this.id,\n      data: this.data,\n      rules: this.rules,\n      related: this.related,\n      dom: this.dom,\n      events: this.events,\n    };\n  }\n\n  /**\n   * @deprecated\n   */\n  toSerializedNode() {\n    return serializeNode(this.data, this.store.resolver);\n  }\n}\n"]}