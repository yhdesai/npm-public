{"version":3,"file":"EditorStore.js","sourceRoot":"","sources":["../../src/store/EditorStore.ts"],"names":[],"mappings":"AAuDA,wDAAwD;AACxD,2BAA2B;AAC3B,4CAA4C;AAC5C,IAAI;AAEJ,wDAAwD;AACxD,uCAAuC;AACvC,wCAAwC;AACxC,4CAA4C;AAC5C,0BAA0B;AAC1B,iCAAiC;AACjC,0BAA0B;AAE1B,gDAAgD;AAChD,sCAAsC;AACtC,2CAA2C;AAC3C,yBAAyB;AACzB,yDAAyD;AACzD,0CAA0C;AAC1C,IAAI;AAEJ,iCAAiC;AAEjC,2DAA2D;AAC3D,qBAAqB;AACrB,qCAAqC;AACrC,iDAAiD;AACjD,8BAA8B;AAC9B,mCAAmC;AACnC,eAAe;AACf,8BAA8B;AAC9B,8BAA8B;AAC9B,OAAO;AACP,IAAI","sourcesContent":["import { History, Store } from '@craftjs/utils';\n\nimport { RelatedComponents } from './RelatedComponents';\nimport { EditorQuery } from './query';\n\nimport { CoreEventHandlers } from '../events';\nimport {\n  EditorEvents,\n  EditorState,\n  FreshNode,\n  Indicator,\n  LegacyNode,\n  LegacyStateOptions,\n  NodeEventTypes,\n  NodeId,\n  Resolver,\n  SerializedNode,\n  SerializedNodes,\n} from '../interfaces';\nimport { ActionMethods } from '../store/actions';\n\nexport type EditorStoreConfig = {\n  onRender: React.ComponentType<{ render: React.ReactElement }>;\n  onNodesChange: (query: EditorQuery) => void;\n  indicator: Partial<{\n    success: string;\n    error: string;\n    transition: string;\n    thickness: number;\n  }>;\n  handlers: (store: EditorStore) => CoreEventHandlers;\n  normalizeNodes: (state: EditorState, previousState: EditorState) => void;\n  resolver: Resolver;\n};\n\ntype Actions = ReturnType<typeof ActionMethods>;\nexport interface EditorStore extends Store<EditorState> {\n  history: History;\n  config: EditorStoreConfig;\n  handlers: CoreEventHandlers;\n  related: RelatedComponents;\n  resolver: Resolver;\n\n  actions: Actions & {\n    history: {\n      undo: () => void;\n      redo: () => void;\n      ignore: () => Actions;\n      throttle: (rate: number) => Actions;\n      merge: () => Actions;\n    };\n  };\n  query: EditorQuery;\n}\n\n// export interface LegacyNodeQuery extends LegacyNode {\n//   get: () => LegacyNode;\n//   toSerializedNode: () => SerializedNode;\n// }\n\n// export interface NodeQuery extends LegacyNodeQuery {}\n// export interface LegacyEditorQuery {\n//   /** Deprecating state accessors **/\n//   nodes: Record<NodeId, LegacyNodeQuery>;\n//   events: EditorEvents;\n//   options: LegacyStateOptions;\n//   indicator: Indicator;\n\n//   /** Deprecating methods from NodeHelpers */\n//   getOptions(): LegacyStateOptions;\n//   getSerializedNodes(): SerializedNodes;\n//   serialize(): string;\n//   parseSerializedNode(serializedNode: SerializedNode);\n//   parseFreshNode(freshNode: FreshNode);\n// }\n\n// export interface EventQuery {}\n\n// export interface EditorQuery extends LegacyEditorQuery {\n//   root: NodeQuery;\n//   node: (id: NodeId) => NodeQuery;\n//   event: (type: NodeEventTypes) => EventQuery;\n//   isEnabled: () => boolean;\n//   getDropPlaceholder: () => any;\n//   history: {\n//     canUndo: () => boolean;\n//     canRedo: () => boolean;\n//   };\n// }\n"]}