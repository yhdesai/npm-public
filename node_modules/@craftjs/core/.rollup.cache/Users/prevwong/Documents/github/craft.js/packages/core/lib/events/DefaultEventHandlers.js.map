{"version":3,"file":"DefaultEventHandlers.js","sourceRoot":"","sources":["../../src/events/DefaultEventHandlers.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction } from 'lodash';\n\nimport { CoreEventHandlers, CreateHandlerOptions } from './CoreEventHandlers';\nimport { createShadow } from './createShadow';\n\nimport { Indicator, NodeId, NodeTree, Node } from '../interfaces';\n\ntype DraggedElement = NodeId[] | NodeTree;\n\nexport type DefaultEventHandlersOptions = {\n  isMultiSelectEnabled: (e: MouseEvent) => boolean;\n};\n\n/**\n * Specifies Editor-wide event handlers and connectors\n */\nexport class DefaultEventHandlers<O = {}> extends CoreEventHandlers<\n  DefaultEventHandlersOptions & O\n> {\n  static draggedElementShadow: HTMLElement;\n  static draggedElement: DraggedElement;\n  static indicator: Indicator = null;\n  currentSelectedElementIds = [];\n\n  handlers() {\n    const store = this.options.store;\n\n    return {\n      connect: (el: HTMLElement, id: NodeId) => {\n        this.dom.register(id, el);\n\n        return this.reflect((connectors) => {\n          connectors.select(el, id);\n          connectors.hover(el, id);\n          connectors.drop(el, id);\n        });\n      },\n      select: (el: HTMLElement, id: NodeId) => {\n        const unbindOnMouseDown = this.addCraftEventListener(\n          el,\n          'mousedown',\n          (e) => {\n            e.craft.stopPropagation();\n\n            let newSelectedElementIds = [];\n\n            if (id) {\n              const { query } = store;\n              const selectedElementIds = query.getEvent('selected').all();\n              const isMultiSelect = this.options.isMultiSelectEnabled(e);\n\n              /**\n               * Retain the previously select elements if the multi-select condition is enabled\n               * or if the currentNode is already selected\n               *\n               * so users can just click to drag the selected elements around without holding the multi-select key\n               */\n\n              if (isMultiSelect || selectedElementIds.includes(id)) {\n                newSelectedElementIds = selectedElementIds.filter(\n                  (selectedId) => {\n                    const descendants = query.node(selectedId).descendants();\n                    const ancestors = query.node(selectedId).ancestors();\n\n                    // Deselect ancestors/descendants\n                    if (descendants.includes(id) || ancestors.includes(id)) {\n                      return false;\n                    }\n\n                    return true;\n                  }\n                );\n              }\n\n              if (!newSelectedElementIds.includes(id)) {\n                newSelectedElementIds.push(id);\n              }\n            }\n\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\n          }\n        );\n\n        const unbindOnClick = this.addCraftEventListener(el, 'click', (e) => {\n          e.craft.stopPropagation();\n\n          const { query } = store;\n          const selectedElementIds = query.getEvent('selected').all();\n\n          const isMultiSelect = this.options.isMultiSelectEnabled(e);\n          const isNodeAlreadySelected = this.currentSelectedElementIds.includes(\n            id\n          );\n\n          let newSelectedElementIds = [...selectedElementIds];\n\n          if (isMultiSelect && isNodeAlreadySelected) {\n            newSelectedElementIds.splice(newSelectedElementIds.indexOf(id), 1);\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\n          } else if (!isMultiSelect && selectedElementIds.length > 1) {\n            newSelectedElementIds = [id];\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\n          }\n\n          this.currentSelectedElementIds = newSelectedElementIds;\n        });\n\n        return () => {\n          store.actions.setNodeEvent('selected', null);\n          unbindOnMouseDown();\n          unbindOnClick();\n        };\n      },\n      hover: (el: HTMLElement, id: NodeId) => {\n        const unbindMouseover = this.addCraftEventListener(\n          el,\n          'mouseover',\n          (e) => {\n            e.craft.stopPropagation();\n            store.actions.setNodeEvent('hovered', id);\n          }\n        );\n\n        return () => {\n          store.actions.setNodeEvent('hovered', null);\n          unbindMouseover();\n        };\n      },\n      drop: (el: HTMLElement, targetId: NodeId) => {\n        const unbindDragOver = this.addCraftEventListener(\n          el,\n          'dragover',\n          (e) => {\n            e.craft.stopPropagation();\n            e.preventDefault();\n          }\n        );\n\n        const unbindDragEnter = this.addCraftEventListener(\n          el,\n          'dragenter',\n          (e) => {\n            e.craft.stopPropagation();\n            e.preventDefault();\n\n            const draggedElement = DefaultEventHandlers.draggedElement;\n            if (!draggedElement) {\n              return;\n            }\n\n            let node = (draggedElement as unknown) as Node;\n\n            if ((draggedElement as NodeTree).rootNodeId) {\n              const nodeTree = draggedElement as NodeTree;\n              node = nodeTree.nodes[nodeTree.rootNodeId];\n            }\n\n            const { clientX: x, clientY: y } = e;\n            const indicator = store.query.getDropPlaceholder(node, targetId, {\n              x,\n              y,\n            });\n\n            if (!indicator) {\n              return;\n            }\n            store.actions.setIndicator(indicator);\n            DefaultEventHandlers.indicator = indicator;\n          }\n        );\n\n        return () => {\n          unbindDragEnter();\n          unbindDragOver();\n        };\n      },\n      drag: (el: HTMLElement, id: NodeId) => {\n        if (!store.query.node(id).isDraggable()) {\n          return () => {};\n        }\n\n        el.setAttribute('draggable', 'true');\n\n        const unbindDragStart = this.addCraftEventListener(\n          el,\n          'dragstart',\n          (e) => {\n            e.craft.stopPropagation();\n\n            const { query, actions } = store;\n            const selectedElementIds = query.getEvent('selected').all();\n\n            actions.setNodeEvent('dragged', selectedElementIds);\n\n            const selectedDOMs = selectedElementIds.map(\n              (id) => query.node(id).get().dom\n            );\n\n            DefaultEventHandlers.draggedElementShadow = createShadow(\n              e,\n              query.node(id).get().dom,\n              selectedDOMs\n            );\n            DefaultEventHandlers.draggedElement = selectedElementIds;\n          }\n        );\n\n        const unbindDragEnd = this.addCraftEventListener(el, 'dragend', (e) => {\n          e.craft.stopPropagation();\n          const onDropElement = (draggedElement, placement) => {\n            const index =\n              placement.index + (placement.where === 'after' ? 1 : 0);\n            store.actions.move(draggedElement, placement.parent, index);\n          };\n          this.dropElement(onDropElement);\n        });\n\n        return () => {\n          el.setAttribute('draggable', 'false');\n          unbindDragStart();\n          unbindDragEnd();\n        };\n      },\n      create: (\n        el: HTMLElement,\n        userElement: React.ReactElement,\n        options?: Partial<CreateHandlerOptions>\n      ) => {\n        el.setAttribute('draggable', 'true');\n\n        const unbindDragStart = this.addCraftEventListener(\n          el,\n          'dragstart',\n          (e) => {\n            e.craft.stopPropagation();\n            const tree = store.query\n              .parseReactElement(userElement)\n              .toNodeTree();\n\n            const dom = e.currentTarget as HTMLElement;\n\n            DefaultEventHandlers.draggedElementShadow = createShadow(e, dom, [\n              dom,\n            ]);\n            DefaultEventHandlers.draggedElement = tree;\n          }\n        );\n\n        const unbindDragEnd = this.addCraftEventListener(el, 'dragend', (e) => {\n          e.craft.stopPropagation();\n          const onDropElement = (draggedElement, placement) => {\n            const index =\n              placement.index + (placement.where === 'after' ? 1 : 0);\n            store.actions.addNodeTree(draggedElement, placement.parent, index);\n\n            if (options && isFunction(options.onCreate)) {\n              options.onCreate(draggedElement);\n            }\n          };\n          this.dropElement(onDropElement);\n        });\n\n        return () => {\n          el.removeAttribute('draggable');\n          unbindDragStart();\n          unbindDragEnd();\n        };\n      },\n    };\n  }\n\n  private dropElement(\n    onDropNode: (\n      draggedElement: DraggedElement,\n      placement: Indicator['placement']\n    ) => void\n  ) {\n    const store = this.options.store;\n\n    const {\n      draggedElement,\n      draggedElementShadow,\n      indicator,\n    } = DefaultEventHandlers;\n    if (draggedElement && indicator && !indicator.error) {\n      const { placement } = indicator;\n      onDropNode(draggedElement, placement);\n    }\n\n    if (draggedElementShadow) {\n      draggedElementShadow.parentNode.removeChild(draggedElementShadow);\n      DefaultEventHandlers.draggedElementShadow = null;\n    }\n\n    DefaultEventHandlers.draggedElement = null;\n    DefaultEventHandlers.indicator = null;\n\n    store.actions.setIndicator(null);\n    store.actions.setNodeEvent('dragged', null);\n  }\n}\n"]}