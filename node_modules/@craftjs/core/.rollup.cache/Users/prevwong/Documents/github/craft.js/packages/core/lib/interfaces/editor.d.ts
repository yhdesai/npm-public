/// <reference types="react" />
import { Placement } from './events';
import { Nodes, NodeEventTypes, NodeId } from './nodes';
import { useInternalEditor } from '../editor/useInternalEditor';
export declare type Resolver = Record<string, string | React.ElementType>;
export interface Indicator {
    placement: Placement;
    error: string | false;
}
export declare type EditorEvents = Record<NodeEventTypes, Set<NodeId>>;
export declare type EditorState = {
    nodes: Nodes;
    events: EditorEvents;
    enabled: boolean;
    indicator: Indicator;
    timestamp: number;
};
export declare type ConnectedEditor = ReturnType<typeof useInternalEditor>;
