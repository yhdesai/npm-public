{"version":3,"file":"Editor.js","sourceRoot":"","sources":["../../src/editor/Editor.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEvC,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAEnC,OAAO,EAAE,eAAe,EAAqB,MAAM,UAAU,CAAC;AAI9D;;GAEG;AACH,MAAM,CAAC,MAAM,MAAM,GAAmC,KAAK,CAAC,IAAI,CAC9D,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,MAAM,EAAE,EAAE,EAAE;IACnC,MAAM,KAAK,GAAG,OAAO,CACnB,GAAG,EAAE,CACH,IAAI,eAAe,CAAC;QAClB,KAAK,EAAE;YACL,OAAO,EAAE,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;SAChD;QACD,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC;KAClB,CAAC,EACJ,CAAC,MAAM,EAAE,OAAO,CAAC,CAClB,CAAC;IAEF,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,oBAAC,aAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,KAAK,EAAE;QACtC,oBAAC,MAAM,QAAE,QAAQ,CAAU,CACJ,CAC1B,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["import React, { useMemo } from 'react';\n\nimport { EditorContext } from './EditorContext';\n\nimport { Events } from '../events';\nimport { EditorState } from '../interfaces';\nimport { EditorStoreImpl, EditorStoreConfig } from '../store';\n\ntype EditorProps = EditorStoreConfig & Partial<EditorState>;\n\n/**\n * A React Component that provides the Editor context\n */\nexport const Editor: React.FC<Partial<EditorProps>> = React.memo(\n  ({ children, enabled, ...config }) => {\n    const store = useMemo(\n      () =>\n        new EditorStoreImpl({\n          state: {\n            enabled: enabled !== undefined ? enabled : true,\n          },\n          ...(config || {}),\n        }),\n      [config, enabled]\n    );\n\n    if (!store) {\n      return null;\n    }\n\n    return (\n      <EditorContext.Provider value={{ store }}>\n        <Events>{children}</Events>\n      </EditorContext.Provider>\n    );\n  }\n);\n"]}