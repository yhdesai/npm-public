{"version":3,"file":"utilityTypes.js","sourceRoot":"","sources":["../src/utilityTypes.ts"],"names":[],"mappings":"","sourcesContent":["export type Overwrite<T, U> = Pick<T, Exclude<keyof T, keyof U>> & U;\nexport type Delete<T, U> = Pick<T, Exclude<keyof T, U>>;\nexport type OverwriteFnReturnType<F extends (...args: any) => void, R> = (\n  ...args: Parameters<F>\n) => Delete<ReturnType<F>, R>;\nexport type ConditionallyMergeRecordTypes<\n  C,\n  S extends Record<string, any>\n> = C extends null ? S : C & S;\n"]}