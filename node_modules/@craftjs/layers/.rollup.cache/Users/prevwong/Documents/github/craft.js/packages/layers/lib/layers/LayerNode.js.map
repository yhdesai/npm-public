{"version":3,"file":"LayerNode.js","sourceRoot":"","sources":["../../src/layers/LayerNode.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useEditor, ROOT_NODE } from '@craftjs/core';\nimport React, { useRef, useEffect, useLayoutEffect, useState } from 'react';\n\nimport { LayerContextProvider } from './LayerContextProvider';\nimport { useLayer } from './useLayer';\n\nimport { useLayerManager } from '../manager/useLayerManager';\n\nexport const LayerNode: React.FC = () => {\n  const { id, depth, children, expanded } = useLayer((layer) => ({\n    expanded: layer.expanded,\n  }));\n\n  const { data, shouldBeExpanded } = useEditor((state, query) => {\n    // TODO: handle multiple selected elements\n    const selected = query.getEvent('selected').first();\n\n    return {\n      data: state.nodes[id] && state.nodes[id].data,\n      shouldBeExpanded:\n        selected && query.node(selected).ancestors(true).includes(id),\n    };\n  });\n\n  const {\n    actions: { registerLayer, toggleLayer },\n    renderLayer,\n    expandRootOnLoad,\n  } = useLayerManager((state) => ({\n    renderLayer: state.options.renderLayer,\n    expandRootOnLoad: state.options.expandRootOnLoad,\n  }));\n\n  const [isRegistered, setRegistered] = useState(false);\n\n  useLayoutEffect(() => {\n    registerLayer(id);\n    setRegistered(true);\n  }, [registerLayer, id]);\n\n  const expandedRef = useRef<boolean>(expanded);\n  expandedRef.current = expanded;\n\n  const shouldBeExpandedOnLoad = useRef<boolean>(\n    expandRootOnLoad && id === ROOT_NODE\n  );\n\n  useEffect(() => {\n    if (!expandedRef.current && shouldBeExpanded) {\n      toggleLayer(id);\n    }\n  }, [toggleLayer, id, shouldBeExpanded]);\n\n  useEffect(() => {\n    if (shouldBeExpandedOnLoad.current) {\n      toggleLayer(id);\n    }\n  }, [toggleLayer, id]);\n\n  return data && isRegistered ? (\n    <div className={`craft-layer-node ${id}`}>\n      {React.createElement(\n        renderLayer,\n        {},\n        children && expanded\n          ? children.map((id) => (\n              <LayerContextProvider key={id} id={id} depth={depth + 1} />\n            ))\n          : null\n      )}\n    </div>\n  ) : null;\n};\n"]}