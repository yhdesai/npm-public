{"version":3,"file":"LayerHandlers.js","sourceRoot":"","sources":["../../src/events/LayerHandlers.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodeId, Node, DerivedCoreEventHandlers } from '@craftjs/core';\n\nimport { LayerIndicator } from '../interfaces';\n\nexport class LayerHandlers extends DerivedCoreEventHandlers<{\n  layerStore: any;\n  layerId: NodeId;\n}> {\n  static draggedElement;\n  static events: {\n    indicator: LayerIndicator;\n    currentCanvasHovered: NodeId;\n  } = {\n    indicator: null,\n    currentCanvasHovered: null,\n  };\n  static currentCanvasHovered;\n\n  getLayer(id) {\n    return this.options.layerStore.getState().layers[id];\n  }\n\n  handlers() {\n    const editorStore = this.derived.options.store;\n    const { layerStore, layerId } = this.options;\n    return {\n      layer: (el: HTMLElement) => {\n        const cleanupParentConnectors = this.inherit((connectors) => {\n          connectors.select(el, layerId);\n          connectors.hover(el, layerId);\n          connectors.drag(el, layerId);\n\n          layerStore.actions.setDOM(layerId, {\n            dom: el,\n          });\n        });\n\n        const unbindMouseOver = this.addCraftEventListener(\n          el,\n          'mouseover',\n          (e) => {\n            e.craft.stopPropagation();\n            layerStore.actions.setLayerEvent('hovered', layerId);\n          }\n        );\n\n        const unbindDragOver = this.addCraftEventListener(\n          el,\n          'dragover',\n          (e) => {\n            e.craft.stopPropagation();\n            e.preventDefault();\n\n            const { indicator, currentCanvasHovered } = LayerHandlers.events;\n\n            const canvasNode = editorStore.query.node(currentCanvasHovered);\n\n            if (currentCanvasHovered && indicator) {\n              const heading = this.getLayer(\n                canvasNode.id\n              ).headingDom.getBoundingClientRect();\n\n              if (\n                e.clientY > heading.top + 10 &&\n                e.clientY < heading.bottom - 10\n              ) {\n                const currNode = canvasNode.getChildAtIndex(\n                  canvasNode.getChildNodes().length\n                );\n                if (!currNode) {\n                  return;\n                }\n\n                LayerHandlers.events.indicator = {\n                  ...indicator,\n                  placement: {\n                    currentNode: currNode.id,\n                    index: canvasNode.getChildNodes().length,\n                    where: 'after',\n                    parent: canvasNode.id,\n                  },\n                  onCanvas: true,\n                };\n\n                layerStore.actions.setIndicator(LayerHandlers.events.indicator);\n              }\n            }\n          }\n        );\n\n        const unbindDragEnter = this.addCraftEventListener(\n          el,\n          'dragenter',\n          (e) => {\n            e.craft.stopPropagation();\n            e.preventDefault();\n\n            const dragId = LayerHandlers.draggedElement;\n\n            if (!dragId) return;\n\n            let target = layerId;\n\n            const indicatorInfo = editorStore.query.getDropPlaceholder(\n              dragId,\n              target,\n              { x: e.clientX, y: e.clientY },\n              (node) => {\n                const layer = this.getLayer(node);\n                return layer && layer.dom;\n              }\n            );\n\n            if (indicatorInfo) {\n              const {\n                placement: { parent },\n              } = indicatorInfo;\n\n              const parentNode = editorStore.query.node(parent);\n\n              const parentHeadingInfo = this.getLayer(\n                parentNode.id\n              ).headingDom.getBoundingClientRect();\n\n              LayerHandlers.events.currentCanvasHovered = null;\n              if (editorStore.query.node(parent).isCanvas()) {\n                if (parentNode.getParent()) {\n                  const grandparentNode = parentNode.getParent();\n\n                  if (editorStore.query.node(grandparentNode.id).isCanvas()) {\n                    LayerHandlers.events.currentCanvasHovered = parentNode.id;\n                    if (\n                      (e.clientY > parentHeadingInfo.bottom - 10 &&\n                        !this.getLayer(parentNode.id).expanded) ||\n                      e.clientY < parentHeadingInfo.top + 10\n                    ) {\n                      indicatorInfo.placement.parent = grandparentNode.id;\n                      indicatorInfo.placement.currentNode = parentNode.id;\n                      indicatorInfo.placement.index = grandparentNode\n                        .getChildNodes()\n                        .map((node) => node.id)\n                        .indexOf(parentNode.id);\n                      if (\n                        e.clientY > parentHeadingInfo.bottom - 10 &&\n                        !this.getLayer(parentNode.id).expanded\n                      ) {\n                        indicatorInfo.placement.where = 'after';\n                      } else if (e.clientY < parentHeadingInfo.top + 10) {\n                        indicatorInfo.placement.where = 'before';\n                      }\n                    }\n                  }\n                }\n              }\n\n              LayerHandlers.events.indicator = {\n                ...indicatorInfo,\n                onCanvas: false,\n              };\n\n              layerStore.actions.setIndicator(LayerHandlers.events.indicator);\n            }\n          }\n        );\n\n        return () => {\n          cleanupParentConnectors();\n          unbindMouseOver();\n          unbindDragOver();\n          unbindDragEnter();\n        };\n      },\n      layerHeader: (el: HTMLElement) => {\n        layerStore.actions.setDOM(layerId, {\n          headingDom: el,\n        });\n      },\n      drag: (el: HTMLElement) => {\n        el.setAttribute('draggable', 'true');\n\n        const unbindDragStart = this.addCraftEventListener(\n          el,\n          'dragstart',\n          (e) => {\n            e.craft.stopPropagation();\n            LayerHandlers.draggedElement = layerId;\n          }\n        );\n\n        const unbindDragEnd = this.addCraftEventListener(el, 'dragend', (e) => {\n          e.craft.stopPropagation();\n          const events = LayerHandlers.events;\n\n          if (events.indicator && !events.indicator.error) {\n            const { placement } = events.indicator;\n            const { parent, index, where } = placement;\n\n            editorStore.actions.move(\n              LayerHandlers.draggedElement as NodeId,\n              parent,\n              index + (where === 'after' ? 1 : 0)\n            );\n          }\n\n          LayerHandlers.draggedElement = null;\n          LayerHandlers.events.indicator = null;\n          layerStore.actions.setIndicator(null);\n        });\n\n        return () => {\n          el.removeAttribute('draggable');\n          unbindDragStart();\n          unbindDragEnd();\n        };\n      },\n    };\n  }\n}\n"]}