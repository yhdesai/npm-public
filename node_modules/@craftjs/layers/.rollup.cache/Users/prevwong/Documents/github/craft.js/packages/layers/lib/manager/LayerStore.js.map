{"version":3,"file":"LayerStore.js","sourceRoot":"","sources":["../../src/manager/LayerStore.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAEvC,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAIzC,MAAM,OAAO,UAAW,SAAQ,KAAiB;IAC/C,IAAI,OAAO;QACT,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;QACnC,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;YACtD,OAAO;gBACL,GAAG,KAAK;gBACR,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;aACpE,CAAC;QACJ,CAAC,EAAE,EAAqC,CAAC,CAAC;IAC5C,CAAC;CACF","sourcesContent":["import { Store } from '@craftjs/utils';\n\nimport { LayerMethods } from './actions';\n\nimport { LayerState } from '../interfaces';\n\nexport class LayerStore extends Store<LayerState> {\n  get actions() {\n    const methods = LayerMethods(null);\n    return Object.keys(methods).reduce((accum, actionKey) => {\n      return {\n        ...accum,\n        [actionKey]: (...args) =>\n          this.setState((state) => LayerMethods(state)[actionKey](...args)),\n      };\n    }, {} as ReturnType<typeof LayerMethods>);\n  }\n}\n"]}