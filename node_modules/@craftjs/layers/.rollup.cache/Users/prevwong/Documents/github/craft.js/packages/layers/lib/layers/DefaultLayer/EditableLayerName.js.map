{"version":3,"file":"EditableLayerName.js","sourceRoot":"","sources":["../../../src/layers/DefaultLayer/EditableLayerName.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC1C,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AACxE,OAAO,eAAe,MAAM,uBAAuB,CAAC;AAEpD,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAAG,EAAE;IACpC,MAAM,EAAE,EAAE,EAAE,GAAG,QAAQ,EAAE,CAAC;IAE1B,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACrD,WAAW,EACT,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW;YACxD,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW;YACzC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW;QACtC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM;KACvD,CAAC,CAAC,CAAC;IAEJ,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtD,MAAM,OAAO,GAAG,MAAM,CAAqB,IAAI,CAAC,CAAC;IAEjD,MAAM,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE;QACrC,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;YAC1D,cAAc,CAAC,KAAK,CAAC,CAAC;SACvB;IACH,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,GAAG,EAAE;YACV,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACpD,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAEnB,OAAO,CACL,oBAAC,eAAe,IACd,IAAI,EAAE,WAAW,EACjB,QAAQ,EAAE,CAAC,WAAW,EACtB,GAAG,EAAE,CAAC,GAAQ,EAAE,EAAE;YAChB,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;gBACjC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;gBAClD,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;aAChD;QACH,CAAC,EACD,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;YACd,OAAO,CAAC,SAAS,CACf,EAAE,EACF,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAClD,CAAC;QACJ,CAAC,EACD,OAAO,EAAC,IAAI,EACZ,aAAa,EAAE,GAAG,EAAE;YAClB,IAAI,CAAC,WAAW;gBAAE,cAAc,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,GACD,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useEditor } from '@craftjs/core';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nimport { useLayer } from '../useLayer';\n\nexport const EditableLayerName = () => {\n  const { id } = useLayer();\n\n  const { displayName, actions } = useEditor((state) => ({\n    displayName:\n      state.nodes[id] && state.nodes[id].data.custom.displayName\n        ? state.nodes[id].data.custom.displayName\n        : state.nodes[id].data.displayName,\n    hidden: state.nodes[id] && state.nodes[id].data.hidden,\n  }));\n\n  const [editingName, setEditingName] = useState(false);\n  const nameDOM = useRef<HTMLElement | null>(null);\n\n  const clickOutside = useCallback((e) => {\n    if (nameDOM.current && !nameDOM.current.contains(e.target)) {\n      setEditingName(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      window.removeEventListener('click', clickOutside);\n    };\n  }, [clickOutside]);\n\n  return (\n    <ContentEditable\n      html={displayName}\n      disabled={!editingName}\n      ref={(ref: any) => {\n        if (ref) {\n          nameDOM.current = ref.el.current;\n          window.removeEventListener('click', clickOutside);\n          window.addEventListener('click', clickOutside);\n        }\n      }}\n      onChange={(e) => {\n        actions.setCustom(\n          id,\n          (custom) => (custom.displayName = e.target.value)\n        );\n      }}\n      tagName=\"h2\"\n      onDoubleClick={() => {\n        if (!editingName) setEditingName(true);\n      }}\n    />\n  );\n};\n"]}